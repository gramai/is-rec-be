/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.14-EMANUEL-1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package ro.darch.demo.api;

import com.fasterxml.jackson.databind.ObjectMapper;
import io.swagger.annotations.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import ro.darch.demo.model.GetRecommendationResponseBody200;

import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;
import java.util.List;
import java.util.Optional;

@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCustomCodegen", date = "2021-01-17T19:13:55.210+02:00")
@Api(value = "recommendation", description = "the recommendation API")
@RequestMapping(value = "")
public interface RecommendationApi {

    Logger log = LoggerFactory.getLogger(RecommendationApi.class);

    default Optional<ObjectMapper> getObjectMapper() {
        return Optional.empty();
    }

    default Optional<HttpServletRequest> getRequest() {
        return Optional.empty();
    }

    default Optional<String> getAcceptHeader() {
        return getRequest().map(r -> r.getHeader("Accept"));
    }

    @ApiOperation(value = "", nickname = "getRecommendation", notes = "", response = GetRecommendationResponseBody200.class, tags = {})
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "Ok", response = GetRecommendationResponseBody200.class)})
    @RequestMapping(value = "/recommendation",
            method = RequestMethod.GET)
    default ResponseEntity<List<GetRecommendationResponseBody200>> getRecommendation(@ApiParam(value = "Name of the match") @Valid @RequestParam(value = "name", required = false) String name, @ApiParam(value = "Area of the Match") @Valid @RequestParam(value = "area", required = false) String area, @ApiParam(value = "Programming Language of the Match") @Valid @RequestParam(value = "programmingLanguage", required = false) String programmingLanguage, @ApiParam(value = "Type of the Match") @Valid @RequestParam(value = "type", required = false) String type) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }

}
